

1. 
class Line {
  constructor(name){
    this.names = [];
  }
 
 
  addPerson(name){
    this.names.push(name);
  }
  
 
  findPerson(name){
   for (var i = 0; i < this.names.length; i++){
     if(this.names[i] === name){
       return name + " is at index " + i;
     }
   }
   return name + " is not here";
  }
  
  cutLine(name, friend){
    var friendIndex= this.names.indexOf(friend);
    this.names.splice(friendIndex,0,name);
    
  }
  
  
  leaveLine(name){
    const index = this.names.indexOf(name);
    this.names.splice(index,1);
  }
  
  
}

let line = new Line();

line.addPerson("Vivian");
line.addPerson("Ava");
line.addPerson("Josh");
line.addPerson("Patrick");
line.addPerson("Mike");

console.log(line);
 
line.findPerson("Josh");
line.findPerson("Emily"); 
console.log(line.findPerson("Josh"))
console.log(line.findPerson("Emily"))

line.cutLine("Melissa", "Ava");
console.log(line);

line.leaveLine("Patrick");
console.log( line);



2.A large data structure can be used to keep a list of the top-performing students in a university.


3. My data structure keeps the array organized and easy to manipulate